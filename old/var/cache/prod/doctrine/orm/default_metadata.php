<?php

// This file has been auto-generated by the Symfony Cache Component.

return [[

'App__Entity__BaseEntity__CLASSMETADATA__' => 0,
'App__Entity__Boleto__CLASSMETADATA__' => 1,
'App__Entity__Departament__CLASSMETADATA__' => 2,
'App__Entity__Estado__CLASSMETADATA__' => 3,
'App__Entity__Expenses__CLASSMETADATA__' => 4,
'App__Entity__ManualOrderReport__CLASSMETADATA__' => 5,
'App__Entity__ManualProductCart__CLASSMETADATA__' => 6,
'App__Entity__ModelName__CLASSMETADATA__' => 7,
'App__Entity__Municipio__CLASSMETADATA__' => 8,
'App__Entity__OrderPrediction__CLASSMETADATA__' => 9,
'App__Entity__PaymentType__CLASSMETADATA__' => 10,
'App__Entity__ProductInventory__CLASSMETADATA__' => 11,
'App__Entity__ProductionCount__CLASSMETADATA__' => 12,
'App__Entity__Transporter__CLASSMETADATA__' => 13,
'App__Entity__TravelAccountability__CLASSMETADATA__' => 14,
'App__Entity__TravelEntry__CLASSMETADATA__' => 15,
'App__Entity__TravelTruckOrders__CLASSMETADATA__' => 16,
'App__Entity__Unit__CLASSMETADATA__' => 17,
'App__Entity__User__CLASSMETADATA__' => 18,

], [

0 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\AssignedGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\AssignedGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\BaseEntity',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\BaseEntity',
                ],
                'isMappedSuperclass' => [
                    true,
                ],
                'fieldMappings' => [
                    [
                        'active' => [
                            'fieldName' => 'active',
                            'type' => 'boolean',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'active',
                        ],
                        'createDate' => [
                            'fieldName' => 'createDate',
                            'type' => 'datetimetz',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'create_date',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'active' => 'active',
                        'create_date' => 'createDate',
                    ],
                ],
                'columnNames' => [
                    [
                        'active' => 'active',
                        'createDate' => 'create_date',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'base_entity',
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
1 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\Boleto',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Boleto',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\BoletoRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'active' => [
                            'fieldName' => 'active',
                            'type' => 'boolean',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'active',
                            'declared' => 'App\\Entity\\BaseEntity',
                        ],
                        'createDate' => [
                            'fieldName' => 'createDate',
                            'type' => 'datetimetz',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'create_date',
                            'declared' => 'App\\Entity\\BaseEntity',
                        ],
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'boletoCustomerOwner' => [
                            'fieldName' => 'boletoCustomerOwner',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'boleto_customer_owner',
                        ],
                        'boletoNumber' => [
                            'fieldName' => 'boletoNumber',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'boleto_number',
                        ],
                        'boletoStatus' => [
                            'fieldName' => 'boletoStatus',
                            'type' => 'smallint',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'boleto_status',
                        ],
                        'boletoPaymentDate' => [
                            'fieldName' => 'boletoPaymentDate',
                            'type' => 'datetime',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'boleto_payment_date',
                        ],
                        'boletoValue' => [
                            'fieldName' => 'boletoValue',
                            'type' => 'float',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'boleto_value',
                        ],
                        'boletoInstallment' => [
                            'fieldName' => 'boletoInstallment',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'boleto_installment',
                        ],
                        'boletoVencimento' => [
                            'fieldName' => 'boletoVencimento',
                            'type' => 'datetime',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'boleto_vencimento',
                        ],
                        'boletoProvisionamentoDate' => [
                            'fieldName' => 'boletoProvisionamentoDate',
                            'type' => 'datetime',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'boleto_provisionamento_date',
                        ],
                        'boletoPorContaStatus' => [
                            'fieldName' => 'boletoPorContaStatus',
                            'type' => 'array',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'boleto_por_conta_status',
                        ],
                        'lastUpdate' => [
                            'fieldName' => 'lastUpdate',
                            'type' => 'datetimetz',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'last_update',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'active' => 'active',
                        'create_date' => 'createDate',
                        'id' => 'id',
                        'boleto_customer_owner' => 'boletoCustomerOwner',
                        'boleto_number' => 'boletoNumber',
                        'boleto_status' => 'boletoStatus',
                        'boleto_payment_date' => 'boletoPaymentDate',
                        'boleto_value' => 'boletoValue',
                        'boleto_installment' => 'boletoInstallment',
                        'boleto_vencimento' => 'boletoVencimento',
                        'boleto_provisionamento_date' => 'boletoProvisionamentoDate',
                        'boleto_por_conta_status' => 'boletoPorContaStatus',
                        'last_update' => 'lastUpdate',
                    ],
                ],
                'columnNames' => [
                    [
                        'active' => 'active',
                        'createDate' => 'create_date',
                        'id' => 'id',
                        'boletoCustomerOwner' => 'boleto_customer_owner',
                        'boletoNumber' => 'boleto_number',
                        'boletoStatus' => 'boleto_status',
                        'boletoPaymentDate' => 'boleto_payment_date',
                        'boletoValue' => 'boleto_value',
                        'boletoInstallment' => 'boleto_installment',
                        'boletoVencimento' => 'boleto_vencimento',
                        'boletoProvisionamentoDate' => 'boleto_provisionamento_date',
                        'boletoPorContaStatus' => 'boleto_por_conta_status',
                        'lastUpdate' => 'last_update',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'boleto',
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
2 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\Departament',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Departament',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\DepartamentRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'name' => [
                            'fieldName' => 'name',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => true,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'name',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'name' => 'name',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'name' => 'name',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'departament',
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
3 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\Estado',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Estado',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\EstadoRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'codigoUf' => [
                            'fieldName' => 'codigoUf',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'codigoUf',
                        ],
                        'nome' => [
                            'fieldName' => 'nome',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 50,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'nome',
                        ],
                        'uf' => [
                            'fieldName' => 'uf',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 2,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'uf',
                        ],
                        'regiao' => [
                            'fieldName' => 'regiao',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'regiao',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'codigoUf' => 'codigoUf',
                        'nome' => 'nome',
                        'uf' => 'uf',
                        'regiao' => 'regiao',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'codigoUf' => 'codigoUf',
                        'nome' => 'nome',
                        'uf' => 'uf',
                        'regiao' => 'regiao',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'estado',
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
4 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\Expenses',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Expenses',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\ExpensesRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'nome' => [
                            'fieldName' => 'nome',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'nome',
                        ],
                        'valor' => [
                            'fieldName' => 'valor',
                            'type' => 'float',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'valor',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'nome' => 'nome',
                        'valor' => 'valor',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'nome' => 'nome',
                        'valor' => 'valor',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'expenses',
                    ],
                ],
                'associationMappings' => [
                    [
                        'orderReference' => [
                            'fieldName' => 'orderReference',
                            'joinColumns' => [
                                [
                                    'name' => 'order_reference_id',
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'cascade' => [
                                'persist',
                            ],
                            'inversedBy' => 'expenses',
                            'targetEntity' => 'App\\Entity\\TravelAccountability',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\Expenses',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'order_reference_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'order_reference_id' => 'order_reference_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'order_reference_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
5 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\ManualOrderReport',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\ManualOrderReport',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\ManualOrderReportRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'active' => [
                            'fieldName' => 'active',
                            'type' => 'boolean',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'active',
                            'declared' => 'App\\Entity\\BaseEntity',
                        ],
                        'createDate' => [
                            'fieldName' => 'createDate',
                            'type' => 'datetimetz',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'create_date',
                            'declared' => 'App\\Entity\\BaseEntity',
                        ],
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'customerName' => [
                            'fieldName' => 'customerName',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'customer_name',
                        ],
                        'customerCity' => [
                            'fieldName' => 'customerCity',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'customer_city',
                        ],
                        'freight' => [
                            'fieldName' => 'freight',
                            'type' => 'float',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'freight',
                        ],
                        'discount' => [
                            'fieldName' => 'discount',
                            'type' => 'float',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'discount',
                        ],
                        'transporter' => [
                            'fieldName' => 'transporter',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'transporter',
                        ],
                        'port' => [
                            'fieldName' => 'port',
                            'type' => 'string',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'port',
                        ],
                        'comments' => [
                            'fieldName' => 'comments',
                            'type' => 'text',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'comments',
                        ],
                        'orderStatus' => [
                            'fieldName' => 'orderStatus',
                            'type' => 'smallint',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'options' => [
                                'comment' => '9 - em analise, 3 - cancelado, 2 - debito, 1 - liberado, 0 - fechado',
                            ],
                            'columnName' => 'order_status',
                        ],
                        'lastUpdate' => [
                            'fieldName' => 'lastUpdate',
                            'type' => 'datetimetz',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'last_update',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'active' => 'active',
                        'create_date' => 'createDate',
                        'id' => 'id',
                        'customer_name' => 'customerName',
                        'customer_city' => 'customerCity',
                        'freight' => 'freight',
                        'discount' => 'discount',
                        'transporter' => 'transporter',
                        'port' => 'port',
                        'comments' => 'comments',
                        'order_status' => 'orderStatus',
                        'last_update' => 'lastUpdate',
                    ],
                ],
                'columnNames' => [
                    [
                        'active' => 'active',
                        'createDate' => 'create_date',
                        'id' => 'id',
                        'customerName' => 'customer_name',
                        'customerCity' => 'customer_city',
                        'freight' => 'freight',
                        'discount' => 'discount',
                        'transporter' => 'transporter',
                        'port' => 'port',
                        'comments' => 'comments',
                        'orderStatus' => 'order_status',
                        'lastUpdate' => 'last_update',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'manual_order_report',
                    ],
                ],
                'associationMappings' => [
                    [
                        'paymentType' => [
                            'fieldName' => 'paymentType',
                            'joinColumns' => [
                                [
                                    'name' => 'payment_type_id',
                                    'unique' => false,
                                    'nullable' => false,
                                    'onDelete' => null,
                                    'columnDefinition' => null,
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'cascade' => [],
                            'inversedBy' => null,
                            'targetEntity' => 'App\\Entity\\PaymentType',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\ManualOrderReport',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'payment_type_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'payment_type_id' => 'payment_type_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'payment_type_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'manualProductCarts' => [
                            'fieldName' => 'manualProductCarts',
                            'mappedBy' => 'manualOrderReport',
                            'targetEntity' => 'App\\Entity\\ManualProductCart',
                            'cascade' => [],
                            'orphanRemoval' => false,
                            'fetch' => 2,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'App\\Entity\\ManualOrderReport',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                        ],
                        'travelTruckOrders' => [
                            'fieldName' => 'travelTruckOrders',
                            'joinColumns' => [
                                [
                                    'name' => 'travel_truck_orders_id',
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'cascade' => [],
                            'inversedBy' => 'orderId',
                            'targetEntity' => 'App\\Entity\\TravelTruckOrders',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\ManualOrderReport',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'travel_truck_orders_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'travel_truck_orders_id' => 'travel_truck_orders_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'travel_truck_orders_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
6 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\ManualProductCart',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\ManualProductCart',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\ManualProductCartRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'productName' => [
                            'fieldName' => 'productName',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'product_name',
                        ],
                        'productPrice' => [
                            'fieldName' => 'productPrice',
                            'type' => 'float',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'product_price',
                        ],
                        'productAmount' => [
                            'fieldName' => 'productAmount',
                            'type' => 'bigint',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'product_amount',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'product_name' => 'productName',
                        'product_price' => 'productPrice',
                        'product_amount' => 'productAmount',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'productName' => 'product_name',
                        'productPrice' => 'product_price',
                        'productAmount' => 'product_amount',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'manual_product_cart',
                    ],
                ],
                'associationMappings' => [
                    [
                        'manualOrderReport' => [
                            'fieldName' => 'manualOrderReport',
                            'joinColumns' => [
                                [
                                    'name' => 'manual_order_report_id',
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'cascade' => [],
                            'inversedBy' => 'manualProductCarts',
                            'targetEntity' => 'App\\Entity\\ManualOrderReport',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\ManualProductCart',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'manual_order_report_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'manual_order_report_id' => 'manual_order_report_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'manual_order_report_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
7 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\ModelName',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\ModelName',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\ModelNameRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'active' => [
                            'fieldName' => 'active',
                            'type' => 'boolean',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'active',
                            'declared' => 'App\\Entity\\BaseEntity',
                        ],
                        'createDate' => [
                            'fieldName' => 'createDate',
                            'type' => 'datetimetz',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'create_date',
                            'declared' => 'App\\Entity\\BaseEntity',
                        ],
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'name' => [
                            'fieldName' => 'name',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'name',
                        ],
                        'suggestedPrice' => [
                            'fieldName' => 'suggestedPrice',
                            'type' => 'float',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'suggested_price',
                        ],
                        'colors' => [
                            'fieldName' => 'colors',
                            'type' => 'simple_array',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'colors',
                        ],
                        'height' => [
                            'fieldName' => 'height',
                            'type' => 'string',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'height',
                        ],
                        'specificity' => [
                            'fieldName' => 'specificity',
                            'type' => 'string',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'specificity',
                        ],
                        'lastUpdate' => [
                            'fieldName' => 'lastUpdate',
                            'type' => 'datetimetz',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'last_update',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'active' => 'active',
                        'create_date' => 'createDate',
                        'id' => 'id',
                        'name' => 'name',
                        'suggested_price' => 'suggestedPrice',
                        'colors' => 'colors',
                        'height' => 'height',
                        'specificity' => 'specificity',
                        'last_update' => 'lastUpdate',
                    ],
                ],
                'columnNames' => [
                    [
                        'active' => 'active',
                        'createDate' => 'create_date',
                        'id' => 'id',
                        'name' => 'name',
                        'suggestedPrice' => 'suggested_price',
                        'colors' => 'colors',
                        'height' => 'height',
                        'specificity' => 'specificity',
                        'lastUpdate' => 'last_update',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'model_name',
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
8 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\Municipio',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Municipio',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\MunicipioRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'codigo' => [
                            'fieldName' => 'codigo',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'codigo',
                        ],
                        'nome' => [
                            'fieldName' => 'nome',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'nome',
                        ],
                        'uf' => [
                            'fieldName' => 'uf',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 2,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'uf',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'codigo' => 'codigo',
                        'nome' => 'nome',
                        'uf' => 'uf',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'codigo' => 'codigo',
                        'nome' => 'nome',
                        'uf' => 'uf',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'municipio',
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
9 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\OrderPrediction',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\OrderPrediction',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\OrderPredictionRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'predictionDate' => [
                            'fieldName' => 'predictionDate',
                            'type' => 'date',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'prediction_date',
                        ],
                        'updatedAt' => [
                            'fieldName' => 'updatedAt',
                            'type' => 'datetime',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'updated_at',
                        ],
                        'active' => [
                            'fieldName' => 'active',
                            'type' => 'boolean',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'active',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'prediction_date' => 'predictionDate',
                        'updated_at' => 'updatedAt',
                        'active' => 'active',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'predictionDate' => 'prediction_date',
                        'updatedAt' => 'updated_at',
                        'active' => 'active',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'order_prediction',
                    ],
                ],
                'associationMappings' => [
                    [
                        'orderId' => [
                            'fieldName' => 'orderId',
                            'targetEntity' => 'App\\Entity\\ManualOrderReport',
                            'joinColumns' => [
                                [
                                    'name' => 'order_id_id',
                                    'referencedColumnName' => 'id',
                                    'unique' => true,
                                ],
                            ],
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'cascade' => [
                                'persist',
                                'remove',
                            ],
                            'orphanRemoval' => false,
                            'fetch' => 2,
                            'type' => 1,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\OrderPrediction',
                            'isCascadeRemove' => true,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'order_id_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'order_id_id' => 'order_id_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'order_id_id',
                            ],
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
10 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\PaymentType',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\PaymentType',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\PaymentTypeRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'name' => [
                            'fieldName' => 'name',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'name',
                        ],
                        'plot' => [
                            'fieldName' => 'plot',
                            'type' => 'boolean',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'plot',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'name' => 'name',
                        'plot' => 'plot',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'name' => 'name',
                        'plot' => 'plot',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'payment_type',
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
11 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\ProductInventory',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\ProductInventory',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\ProductInventoryRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'maxStock' => [
                            'fieldName' => 'maxStock',
                            'type' => 'bigint',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'max_stock',
                        ],
                        'minStock' => [
                            'fieldName' => 'minStock',
                            'type' => 'float',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'min_stock',
                        ],
                        'stock' => [
                            'fieldName' => 'stock',
                            'type' => 'float',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'stock',
                        ],
                        'reserved' => [
                            'fieldName' => 'reserved',
                            'type' => 'bigint',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'reserved',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'max_stock' => 'maxStock',
                        'min_stock' => 'minStock',
                        'stock' => 'stock',
                        'reserved' => 'reserved',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'maxStock' => 'max_stock',
                        'minStock' => 'min_stock',
                        'stock' => 'stock',
                        'reserved' => 'reserved',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'product_inventory',
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
12 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\ProductionCount',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\ProductionCount',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\ProductionCountRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'active' => [
                            'fieldName' => 'active',
                            'type' => 'boolean',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'active',
                            'declared' => 'App\\Entity\\BaseEntity',
                        ],
                        'createDate' => [
                            'fieldName' => 'createDate',
                            'type' => 'datetimetz',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'create_date',
                            'declared' => 'App\\Entity\\BaseEntity',
                        ],
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'model' => [
                            'fieldName' => 'model',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'model',
                        ],
                        'height' => [
                            'fieldName' => 'height',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'height',
                        ],
                        'obs' => [
                            'fieldName' => 'obs',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'obs',
                        ],
                        'amount' => [
                            'fieldName' => 'amount',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'amount',
                        ],
                        'date' => [
                            'fieldName' => 'date',
                            'type' => 'datetime',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'date',
                        ],
                        'color' => [
                            'fieldName' => 'color',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'color',
                        ],
                        'lastUpdate' => [
                            'fieldName' => 'lastUpdate',
                            'type' => 'datetimetz',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'last_update',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'active' => 'active',
                        'create_date' => 'createDate',
                        'id' => 'id',
                        'model' => 'model',
                        'height' => 'height',
                        'obs' => 'obs',
                        'amount' => 'amount',
                        'date' => 'date',
                        'color' => 'color',
                        'last_update' => 'lastUpdate',
                    ],
                ],
                'columnNames' => [
                    [
                        'active' => 'active',
                        'createDate' => 'create_date',
                        'id' => 'id',
                        'model' => 'model',
                        'height' => 'height',
                        'obs' => 'obs',
                        'amount' => 'amount',
                        'date' => 'date',
                        'color' => 'color',
                        'lastUpdate' => 'last_update',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'production_count',
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
13 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\Transporter',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Transporter',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\TransporterRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'port' => [
                            'fieldName' => 'port',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'port',
                        ],
                        'name' => [
                            'fieldName' => 'name',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'name',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'port' => 'port',
                        'name' => 'name',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'port' => 'port',
                        'name' => 'name',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'transporter',
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
14 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\TravelAccountability',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\TravelAccountability',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\TravelAccountabilityRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'active' => [
                            'fieldName' => 'active',
                            'type' => 'boolean',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'active',
                            'declared' => 'App\\Entity\\BaseEntity',
                        ],
                        'createDate' => [
                            'fieldName' => 'createDate',
                            'type' => 'datetimetz',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'create_date',
                            'declared' => 'App\\Entity\\BaseEntity',
                        ],
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'driverName' => [
                            'fieldName' => 'driverName',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'driver_name',
                        ],
                        'departureDate' => [
                            'fieldName' => 'departureDate',
                            'type' => 'datetime',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'departure_date',
                        ],
                        'arrivalDate' => [
                            'fieldName' => 'arrivalDate',
                            'type' => 'datetime',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'arrival_date',
                        ],
                        'departureKm' => [
                            'fieldName' => 'departureKm',
                            'type' => 'float',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'departure_km',
                        ],
                        'arrivalKm' => [
                            'fieldName' => 'arrivalKm',
                            'type' => 'float',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'arrival_km',
                        ],
                        'cash' => [
                            'fieldName' => 'cash',
                            'type' => 'float',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'cash',
                        ],
                        'comment' => [
                            'fieldName' => 'comment',
                            'type' => 'text',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'comment',
                        ],
                        'lastUpdate' => [
                            'fieldName' => 'lastUpdate',
                            'type' => 'datetimetz',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'last_update',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'active' => 'active',
                        'create_date' => 'createDate',
                        'id' => 'id',
                        'driver_name' => 'driverName',
                        'departure_date' => 'departureDate',
                        'arrival_date' => 'arrivalDate',
                        'departure_km' => 'departureKm',
                        'arrival_km' => 'arrivalKm',
                        'cash' => 'cash',
                        'comment' => 'comment',
                        'last_update' => 'lastUpdate',
                    ],
                ],
                'columnNames' => [
                    [
                        'active' => 'active',
                        'createDate' => 'create_date',
                        'id' => 'id',
                        'driverName' => 'driver_name',
                        'departureDate' => 'departure_date',
                        'arrivalDate' => 'arrival_date',
                        'departureKm' => 'departure_km',
                        'arrivalKm' => 'arrival_km',
                        'cash' => 'cash',
                        'comment' => 'comment',
                        'lastUpdate' => 'last_update',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'travel_accountability',
                    ],
                ],
                'associationMappings' => [
                    [
                        'expenses' => [
                            'fieldName' => 'expenses',
                            'mappedBy' => 'orderReference',
                            'targetEntity' => 'App\\Entity\\Expenses',
                            'cascade' => [],
                            'orphanRemoval' => false,
                            'fetch' => 2,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'App\\Entity\\TravelAccountability',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                        ],
                        'travelEntries' => [
                            'fieldName' => 'travelEntries',
                            'mappedBy' => 'orderReference',
                            'targetEntity' => 'App\\Entity\\TravelEntry',
                            'cascade' => [],
                            'orphanRemoval' => false,
                            'fetch' => 2,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'App\\Entity\\TravelAccountability',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
15 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\TravelEntry',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\TravelEntry',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\TravelEntryRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'nome' => [
                            'fieldName' => 'nome',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'nome',
                        ],
                        'freight' => [
                            'fieldName' => 'freight',
                            'type' => 'float',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'freight',
                        ],
                        'orderValue' => [
                            'fieldName' => 'orderValue',
                            'type' => 'float',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'order_value',
                        ],
                        'checkValue' => [
                            'fieldName' => 'checkValue',
                            'type' => 'float',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'check_value',
                        ],
                        'byCountValue' => [
                            'fieldName' => 'byCountValue',
                            'type' => 'float',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'by_count_value',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'nome' => 'nome',
                        'freight' => 'freight',
                        'order_value' => 'orderValue',
                        'check_value' => 'checkValue',
                        'by_count_value' => 'byCountValue',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'nome' => 'nome',
                        'freight' => 'freight',
                        'orderValue' => 'order_value',
                        'checkValue' => 'check_value',
                        'byCountValue' => 'by_count_value',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'travel_entry',
                    ],
                ],
                'associationMappings' => [
                    [
                        'orderReference' => [
                            'fieldName' => 'orderReference',
                            'joinColumns' => [
                                [
                                    'name' => 'order_reference_id',
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'cascade' => [],
                            'inversedBy' => 'travelEntries',
                            'targetEntity' => 'App\\Entity\\TravelAccountability',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\TravelEntry',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'order_reference_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'order_reference_id' => 'order_reference_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'order_reference_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
16 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\TravelTruckOrders',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\TravelTruckOrders',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\TravelTruckOrdersRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'active' => [
                            'fieldName' => 'active',
                            'type' => 'boolean',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'active',
                            'declared' => 'App\\Entity\\BaseEntity',
                        ],
                        'createDate' => [
                            'fieldName' => 'createDate',
                            'type' => 'datetimetz',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'create_date',
                            'declared' => 'App\\Entity\\BaseEntity',
                        ],
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'driverName' => [
                            'fieldName' => 'driverName',
                            'type' => 'string',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'driver_name',
                        ],
                        'departureDate' => [
                            'fieldName' => 'departureDate',
                            'type' => 'date',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'departure_date',
                        ],
                        'kmout' => [
                            'fieldName' => 'kmout',
                            'type' => 'string',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'kmout',
                        ],
                        'checkedOrders' => [
                            'fieldName' => 'checkedOrders',
                            'type' => 'array',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'checked_orders',
                        ],
                        'lastUpdate' => [
                            'fieldName' => 'lastUpdate',
                            'type' => 'datetimetz',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'last_update',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'active' => 'active',
                        'create_date' => 'createDate',
                        'id' => 'id',
                        'driver_name' => 'driverName',
                        'departure_date' => 'departureDate',
                        'kmout' => 'kmout',
                        'checked_orders' => 'checkedOrders',
                        'last_update' => 'lastUpdate',
                    ],
                ],
                'columnNames' => [
                    [
                        'active' => 'active',
                        'createDate' => 'create_date',
                        'id' => 'id',
                        'driverName' => 'driver_name',
                        'departureDate' => 'departure_date',
                        'kmout' => 'kmout',
                        'checkedOrders' => 'checked_orders',
                        'lastUpdate' => 'last_update',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'travel_truck_orders',
                    ],
                ],
                'associationMappings' => [
                    [
                        'orderId' => [
                            'fieldName' => 'orderId',
                            'mappedBy' => 'travelTruckOrders',
                            'targetEntity' => 'App\\Entity\\ManualOrderReport',
                            'cascade' => [],
                            'orphanRemoval' => false,
                            'fetch' => 2,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'App\\Entity\\TravelTruckOrders',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
17 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\Unit',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Unit',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\UnitRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'initials' => [
                            'fieldName' => 'initials',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 2,
                            'unique' => true,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'initials',
                        ],
                        'name' => [
                            'fieldName' => 'name',
                            'type' => 'string',
                            'scale' => null,
                            'length' => null,
                            'unique' => true,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'name',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'initials' => 'initials',
                        'name' => 'name',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'initials' => 'initials',
                        'name' => 'name',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'unit',
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
18 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\User',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\User',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\UserRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'active' => [
                            'fieldName' => 'active',
                            'type' => 'boolean',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'active',
                            'declared' => 'App\\Entity\\BaseEntity',
                        ],
                        'createDate' => [
                            'fieldName' => 'createDate',
                            'type' => 'datetimetz',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'create_date',
                            'declared' => 'App\\Entity\\BaseEntity',
                        ],
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'userNickname' => [
                            'fieldName' => 'userNickname',
                            'type' => 'string',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'user_nickname',
                        ],
                        'email' => [
                            'fieldName' => 'email',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 180,
                            'unique' => true,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'email',
                        ],
                        'roles' => [
                            'fieldName' => 'roles',
                            'type' => 'json',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'roles',
                        ],
                        'password' => [
                            'fieldName' => 'password',
                            'type' => 'string',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'password',
                        ],
                        'profileImage' => [
                            'fieldName' => 'profileImage',
                            'type' => 'string',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'profile_image',
                        ],
                        'lastUpdate' => [
                            'fieldName' => 'lastUpdate',
                            'type' => 'datetimetz',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'last_update',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'active' => 'active',
                        'create_date' => 'createDate',
                        'id' => 'id',
                        'user_nickname' => 'userNickname',
                        'email' => 'email',
                        'roles' => 'roles',
                        'password' => 'password',
                        'profile_image' => 'profileImage',
                        'last_update' => 'lastUpdate',
                    ],
                ],
                'columnNames' => [
                    [
                        'active' => 'active',
                        'createDate' => 'create_date',
                        'id' => 'id',
                        'userNickname' => 'user_nickname',
                        'email' => 'email',
                        'roles' => 'roles',
                        'password' => 'password',
                        'profileImage' => 'profile_image',
                        'lastUpdate' => 'last_update',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'user',
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},

]];
