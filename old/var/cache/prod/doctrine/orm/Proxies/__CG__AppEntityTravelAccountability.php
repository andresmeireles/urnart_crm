<?php

namespace Proxies\__CG__\App\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class TravelAccountability extends \App\Entity\TravelAccountability implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\TravelAccountability' . "\0" . 'id', '' . "\0" . 'App\\Entity\\TravelAccountability' . "\0" . 'driverName', '' . "\0" . 'App\\Entity\\TravelAccountability' . "\0" . 'departureDate', '' . "\0" . 'App\\Entity\\TravelAccountability' . "\0" . 'arrivalDate', '' . "\0" . 'App\\Entity\\TravelAccountability' . "\0" . 'departureKm', '' . "\0" . 'App\\Entity\\TravelAccountability' . "\0" . 'arrivalKm', '' . "\0" . 'App\\Entity\\TravelAccountability' . "\0" . 'cash', '' . "\0" . 'App\\Entity\\TravelAccountability' . "\0" . 'comment', '' . "\0" . 'App\\Entity\\TravelAccountability' . "\0" . 'expenses', '' . "\0" . 'App\\Entity\\TravelAccountability' . "\0" . 'travelEntries', 'lastUpdate'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\TravelAccountability' . "\0" . 'id', '' . "\0" . 'App\\Entity\\TravelAccountability' . "\0" . 'driverName', '' . "\0" . 'App\\Entity\\TravelAccountability' . "\0" . 'departureDate', '' . "\0" . 'App\\Entity\\TravelAccountability' . "\0" . 'arrivalDate', '' . "\0" . 'App\\Entity\\TravelAccountability' . "\0" . 'departureKm', '' . "\0" . 'App\\Entity\\TravelAccountability' . "\0" . 'arrivalKm', '' . "\0" . 'App\\Entity\\TravelAccountability' . "\0" . 'cash', '' . "\0" . 'App\\Entity\\TravelAccountability' . "\0" . 'comment', '' . "\0" . 'App\\Entity\\TravelAccountability' . "\0" . 'expenses', '' . "\0" . 'App\\Entity\\TravelAccountability' . "\0" . 'travelEntries', 'lastUpdate'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (TravelAccountability $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getDriverName(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDriverName', []);

        return parent::getDriverName();
    }

    /**
     * {@inheritDoc}
     */
    public function setDriverName(string $driverName): \App\Entity\TravelAccountability
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDriverName', [$driverName]);

        return parent::setDriverName($driverName);
    }

    /**
     * {@inheritDoc}
     */
    public function getDepartureDate(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDepartureDate', []);

        return parent::getDepartureDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setDepartureDate(\DateTimeInterface $departureDate): \App\Entity\TravelAccountability
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDepartureDate', [$departureDate]);

        return parent::setDepartureDate($departureDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getArrivalDate(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getArrivalDate', []);

        return parent::getArrivalDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setArrivalDate(\DateTimeInterface $arrivalDate): \App\Entity\TravelAccountability
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setArrivalDate', [$arrivalDate]);

        return parent::setArrivalDate($arrivalDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getDepartureKm(): ?float
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDepartureKm', []);

        return parent::getDepartureKm();
    }

    /**
     * {@inheritDoc}
     */
    public function setDepartureKm(float $departureKm): \App\Entity\TravelAccountability
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDepartureKm', [$departureKm]);

        return parent::setDepartureKm($departureKm);
    }

    /**
     * {@inheritDoc}
     */
    public function getArrivalKm(): ?float
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getArrivalKm', []);

        return parent::getArrivalKm();
    }

    /**
     * {@inheritDoc}
     */
    public function setArrivalKm(float $arrivalKm): \App\Entity\TravelAccountability
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setArrivalKm', [$arrivalKm]);

        return parent::setArrivalKm($arrivalKm);
    }

    /**
     * {@inheritDoc}
     */
    public function getCash(): ?float
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCash', []);

        return parent::getCash();
    }

    /**
     * {@inheritDoc}
     */
    public function setCash(float $cash): \App\Entity\TravelAccountability
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCash', [$cash]);

        return parent::setCash($cash);
    }

    /**
     * {@inheritDoc}
     */
    public function getComment(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getComment', []);

        return parent::getComment();
    }

    /**
     * {@inheritDoc}
     */
    public function setComment(?string $comment): \App\Entity\TravelAccountability
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setComment', [$comment]);

        return parent::setComment($comment);
    }

    /**
     * {@inheritDoc}
     */
    public function getExpenses(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getExpenses', []);

        return parent::getExpenses();
    }

    /**
     * {@inheritDoc}
     */
    public function addExpense(\App\Entity\Expenses $expense): \App\Entity\TravelAccountability
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addExpense', [$expense]);

        return parent::addExpense($expense);
    }

    /**
     * {@inheritDoc}
     */
    public function removeExpense(\App\Entity\Expenses $expense): \App\Entity\TravelAccountability
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeExpense', [$expense]);

        return parent::removeExpense($expense);
    }

    /**
     * {@inheritDoc}
     */
    public function getTravelEntries(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTravelEntries', []);

        return parent::getTravelEntries();
    }

    /**
     * {@inheritDoc}
     */
    public function addTravelEntry(\App\Entity\TravelEntry $travelEntry): \App\Entity\TravelAccountability
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addTravelEntry', [$travelEntry]);

        return parent::addTravelEntry($travelEntry);
    }

    /**
     * {@inheritDoc}
     */
    public function removeTravelEntry(\App\Entity\TravelEntry $travelEntry): \App\Entity\TravelAccountability
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeTravelEntry', [$travelEntry]);

        return parent::removeTravelEntry($travelEntry);
    }

    /**
     * {@inheritDoc}
     */
    public function __toArray(): ?array
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toArray', []);

        return parent::__toArray();
    }

    /**
     * {@inheritDoc}
     */
    public function __toString(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function getCreateDate(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreateDate', []);

        return parent::getCreateDate();
    }

    /**
     * {@inheritDoc}
     */
    public function getCreateDateObject(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreateDateObject', []);

        return parent::getCreateDateObject();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreateDate(\DateTimeInterface $date): \App\Entity\BaseEntity
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreateDate', [$date]);

        return parent::setCreateDate($date);
    }

    /**
     * {@inheritDoc}
     */
    public function getLastUpdate(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLastUpdate', []);

        return parent::getLastUpdate();
    }

    /**
     * {@inheritDoc}
     */
    public function setLastUpdate(): \App\Entity\BaseEntity
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLastUpdate', []);

        return parent::setLastUpdate();
    }

    /**
     * {@inheritDoc}
     */
    public function getActive(): bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getActive', []);

        return parent::getActive();
    }

    /**
     * {@inheritDoc}
     */
    public function setActive(bool $active): \App\Entity\BaseEntity
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setActive', [$active]);

        return parent::setActive($active);
    }

}
